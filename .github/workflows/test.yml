name: Test CI

on: [push, pull_request]

jobs:
  test-flake:
    name: "Test Configurations"

    strategy:
      fail-fast: false
      matrix:
        os: [self-hosted, macos-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Install Nix
        if: ${{ matrix.os != 'self-hosted' }}
        uses: DeterminateSystems/nix-installer-action@main

      - name: Check up flake configuration
        run: nix flake check --show-trace

  build-nixos:
    name: "Build Configurations for NixOS instances"

    strategy:
      fail-fast: false
      matrix:
        pattern:
          - system: self-hosted
            target: Parallels
          - system: ubuntu-latest
            target: Laboratory

    runs-on: ${{ matrix.pattern.system }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Install Nix
        if: ${{ matrix.pattern.system != 'self-hosted' }}
        uses: DeterminateSystems/nix-installer-action@main

      - name: Remove unnecessary files
        if: ${{ matrix.pattern.system == 'ubuntu-latest' }}
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Build Aarch64 NixOS configuration
        run: nix build .#nixosConfigurations.${{ matrix.pattern.target }}.config.system.build.toplevel --show-trace

  build-darwin:
    name: "Build Configurations for Darwin instances"
    runs-on: macos-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Cache Nix store
        uses: DeterminateSystems/flakehub-cache-action@main

      - name: Build Aarch64 Darwin configuration
        run: nix build .#darwinConfigurations.Sokhibjons-MacBook-Pro.config.system.build.toplevel --show-trace

  update-merge:
    name: "Merge Update PRs"
    needs: [test-flake, build-nixos, build-darwin]
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'orzklv' && github.event_name == 'pull_request' }}

    steps:
      - name: Enable auto-merge for Update PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{ secrets.PAT }}
